CONN SYS/123@LOCALHOST:1521/XEPDB1 AS SYSDBA; 

ALTER SESSION SET CURRENT_SCHEMA = QLDLNB; 
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

-- SINH VIEN XEM THONG TIN CÁ NHÂN VÀ CHỈNH SỬA .

CREATE OR REPLACE FUNCTION FUNC_PC_SV_XEMTTCN
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) RETURN VARCHAR2
AS
    MA VARCHAR2 (10);
    CUR_USER VARCHAR2(10);
    PRED VARCHAR2(300);

BEGIN 
    CUR_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF CUR_USER = 'SYS' OR CUR_USER = 'QLDLNB' THEN RETURN '';
    ELSIF (CUR_USER LIKE 'NV%') THEN RETURN '';
    ELSIF NOT (CUR_USER LIKE 'SV%') THEN 
    RETURN '1=2';
    END IF ;
    RETURN ' ''SV''||MASV = '''||CUR_USER||''''; 
END ;
/

BEGIN
    DBMS_RLS.DROP_POLICY(
        OBJECT_SCHEMA  => 'QLDLNB' /*IN VARCHAR2*/,
        OBJECT_NAME  => 'SINHVIEN' /*IN VARCHAR2*/,
        POLICY_NAME  => 'PC_SV_XEMTTCN' /*IN VARCHAR2*/);
END;
/
BEGIN 
    DBMS_RLS.ADD_POLICY (
    OBJECT_SCHEMA => 'QLDLNB' ,
    OBJECT_NAME => 'SINHVIEN' , 
    POLICY_NAME => 'PC_SV_XEMTTCN',
    POLICY_FUNCTION => 'FUNC_PC_SV_XEMTTCN',
    STATEMENT_TYPES => 'SELECT, UPDATE'
);
END ;
/

-- Chỉ được xem học phần , KHMO CỦA CHƯƠNG TRÌNH ĐÀO TẠO ĐÂNG THEO HỌC .
CREATE OR REPLACE FUNCTION FUNC_PC_SV_XEMTT_HOCPHAN
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) 
RETURN VARCHAR2
AS 
    STRSQL VARCHAR(100);
    MAHP_ VARCHAR2(10);
    MAHP_N NUMBER(5);
    CUR_USER VARCHAR2(10);
    LIST_MAHP VARCHAR2(300);
    CURSOR CUR IS (
        SELECT MAHP FROM KHMO 
        WHERE MACT IN (
            SELECT MACT FROM SINHVIEN WHERE 'SV'||MASV = 
            SYS_CONTEXT('USERENV', 'SESSION_USER') 
        )
    );
BEGIN

    CUR_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF CUR_USER = 'SYS' OR CUR_USER = 'QLDLNB' THEN RETURN '';
    ELSIF (CUR_USER LIKE 'NV%') THEN RETURN '';
    ELSIF NOT (CUR_USER LIKE 'SV%') THEN 
    RETURN '1=2';
    END IF ;
    OPEN CUR ;
    LIST_MAHP := ' ';
    DBMS_OUTPUT.PUT_LINE('LIST_MAHP: ' || LIST_MAHP);

    LOOP 
        FETCH CUR INTO MAHP_N;
        EXIT WHEN CUR%NOTFOUND; 
            IF (LIST_MAHP != ' ') THEN 
                LIST_MAHP := LIST_MAHP || ','; 
            END IF;
            LIST_MAHP := LIST_MAHP || ' ' || MAHP_N ; 
    END LOOP ; 
    CLOSE CUR;
    RETURN  ' MAHP IN ('||LIST_MAHP||')';
END ;
/


CREATE OR REPLACE FUNCTION FUNC_PC_SV_XEMTT_KHMO
(P_SCHEMA VARCHAR2, P_OBJ VARCHAR2) RETURN VARCHAR2
AS 
    CT VARCHAR2(10);
    CUR_USER VARCHAR2(10); 

BEGIN
    CUR_USER := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF CUR_USER = 'SYS' OR CUR_USER = 'QLDLNB' THEN RETURN '';
    ELSIF (CUR_USER LIKE 'NV%') THEN RETURN '';
    ELSIF NOT (CUR_USER LIKE 'SV%') THEN 
    RETURN '1=2';
    END IF ;
    CT := '';
    SELECT MACT INTO CT FROM SINHVIEN WHERE
     'SV'||MASV = CUR_USER  AND ROWNUM = 1;
    RETURN 'MACT = '''||CT||'''';  
END ;
/

BEGIN 
    DBMS_RLS.DROP_POLICY (
    OBJECT_SCHEMA => 'QLDLNB' ,
    OBJECT_NAME => 'HOCPHAN' , 
    POLICY_NAME => 'PC_SV_XEMTT_HOCPHAN'
    );

    DBMS_RLS.DROP_POLICY (
    OBJECT_SCHEMA => 'QLDLNB' ,
    OBJECT_NAME => 'KHMO' , 
    POLICY_NAME => 'PC_SV_XEMTT_KHMO'
    );
END ; 
/


BEGIN 
    DBMS_RLS.ADD_POLICY (
    OBJECT_SCHEMA => 'QLDLNB' ,
    OBJECT_NAME => 'HOCPHAN' , 
    POLICY_NAME => 'PC_SV_XEMTT_HOCPHAN',
    POLICY_FUNCTION => 'FUNC_PC_SV_XEMTT_HOCPHAN'
    );
END;
/
BEGIN
    DBMS_RLS.ADD_POLICY (
    OBJECT_SCHEMA => 'QLDLNB' ,
    OBJECT_NAME => 'KHMO' , 
    POLICY_NAME => 'PC_SV_XEMTT_KHMO',
    POLICY_FUNCTION => 'FUNC_PC_SV_XEMTT_KHMO',
    STATEMENT_TYPES => 'SELECT'
    );
END; 
/

-- GÁN ROLE CHO SINH VIÊN .

DROP ROLE SV;
CREATE ROLE SV;

GRANT SELECT ON SINHVIEN TO SV; 
GRANT UPDATE (DT, DCHI) ON SINHVIEN TO SV;
GRANT SELECT ON KHMO TO SV;
GRANT SELECT ON HOCPHAN TO SV;

DECLARE
    CURSOR CUR IS (
        SELECT
            'SV'||MASV
        FROM
            QLDLNB.SINHVIEN
        WHERE
            'SV'||MASV IN (
                SELECT
                    USERNAME
                FROM
                    ALL_USERS
            )
    );
    STRSQL VARCHAR2(2000);
    USR    VARCHAR2(10);
BEGIN
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE';
    EXECUTE IMMEDIATE(STRSQL);
    OPEN CUR;
    LOOP
        FETCH CUR INTO USR;
        EXIT WHEN CUR%NOTFOUND;
        STRSQL:= 'GRANT '
                 || 'SV' 
                 ||' TO '
                 ||USR;
        EXECUTE IMMEDIATE (STRSQL);
    END LOOP;

    CLOSE CUR;
END;
/
COMMIT;
SELECT * FROM SINHVIEN;
SELECT * FROM HOCPHAN;
SELECT * FROM KHMO;

